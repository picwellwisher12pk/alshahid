{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd multi-teacher portal database schema\n\nTransform the application into a comprehensive multi-teacher Quran teaching\nportal with role-based access for Admin, Teachers, and Students.\n\nSchema Changes:\n- Extended User model to support ADMIN, TEACHER, and STUDENT roles\n- Added fullName field (mapped to full_name in database)\n- Added relations for teacher and student profiles\n\nNew Tables:\n- teachers: Teacher profiles with bio and profile picture\n- students: Student profiles with optional user account link\n  - Can be assigned to specific teachers\n  - Supports ACTIVE, INACTIVE, and TRIAL statuses\n- classes: Class scheduling system\n  - Links students with teachers\n  - Tracks scheduled, completed, cancelled classes\n- progress_logs: Teacher notes on student progress\n  - Date-stamped logs with titles and notes\n- invoices: Fee management system\n  - Monthly invoicing with status tracking\n  - Supports UNPAID, PAID, OVERDUE, PENDING_VERIFICATION\n- payment_receipts: Receipt upload and verification\n  - Stores Supabase Storage file URLs\n  - Admin approval workflow with rejection reasons\n\nKey Features:\n- Multi-teacher support with student assignment\n- Trial request conversion to actual students\n- Teacher-scoped data access (teachers see only their students)\n- Complete invoice and payment verification workflow\n- Class scheduling and attendance tracking\n- Student progress logging by teachers\n- File upload support for payment receipts\n\nUpdated Models:\n- TrialRequest: Enhanced with requester info and conversion status\n- User: Now supports all three roles with proper relations\n\nDatabase Relationships:\n- User â†’ Teacher (1:1)\n- User â†’ Student (1:1)\n- Teacher â†’ Students (1:many)\n- Teacher â†’ Classes (1:many)\n- Teacher â†’ ProgressLogs (1:many)\n- Student â†’ Classes (1:many)\n- Student â†’ Invoices (1:many)\n- Invoice â†’ PaymentReceipts (1:many)\n\nImplementation Guide:\n- Created MULTI_TEACHER_PORTAL_GUIDE.md with complete implementation roadmap\n- 10 phases covering all features\n- API route specifications\n- User flow documentation\n- Security and authorization patterns\n- Testing checklist\n\nNext Steps:\n1. Run: npx prisma db push\n2. Run: npx prisma generate\n3. Implement API routes following the guide\n4. Build role-specific dashboards\n5. Setup Supabase for file storage\n\nThis schema supports scalability from 1 teacher to multiple teachers\nwith proper data scoping and role-based access control.\n\nðŸ¤– Generated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npx prisma:*)",
      "Bash(git commit:*)",
      "Bash(bun update:*)",
      "Bash(bun run build:*)",
      "Bash(bunx tsc:*)"
    ],
    "deny": [],
    "ask": []
  }
}
